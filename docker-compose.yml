  version: "3.8"

  services:
    postgres:
      image: postgres:15
      env_file:
        - .env
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      volumes:
        - ./postgres_data:/var/lib/postgresql/data
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "appuser", "-d", "ocrtranslate"]
        interval: 5s
        timeout: 5s
        retries: 5

    minio:
      image: minio/minio
      container_name: minio
      ports:
        - "9000:9000"
        - "9001:9001"
      env_file:
        - .env
      environment:
        MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
        MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      command: server /data --console-address ":9001"
      volumes:
        - ./minio_data:/data

    backend:
      build:
        context: .
        dockerfile: backend/Dockerfile
      ports:
        - "8000:8000"
      depends_on:
        postgres:
          condition: service_healthy
        minio:
          condition: service_started
      volumes:
        - ./inference_model:/inference_model
      env_file:
        - .env
      environment:
        DATABASE_URL: ${DATABASE_URL}
        MINIO_ENDPOINT: ${MINIO_ENDPOINT}
        MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
        MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      # healthcheck:
      #   test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      #   interval: 10s
      #   timeout: 5s
      #   retries: 5
      #   start_period: 30s

    ui:
      build:
        context: .
        dockerfile: ui/Dockerfile
      ports:
        - "8501:8501"
      depends_on:
        backend:
          condition: service_started
      environment:
        BACKEND_URL: ${BACKEND_URL}
      volumes:
        - ./model:/model
